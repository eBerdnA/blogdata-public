---
date: "2020-08-12 11:00:00"
updated: "2020-08-13 11:00:00"
title: Application Lifecycle Management (ALM) and Power Apps
legacy: true
slug: /posts/2020-08-12-application-lifecycle-management-alm-and-power-apps
type: article
content-type: html
published: true
properties:
  category: microsoft
  tags: Azure, DevOps
  language: en
...
<h2 id=introduction>Introduction</h2>
<p>This article will explain how to apply Application Lifecycle Management (ALM) in Azure DevOps for Power Apps. It will be shown how to set up the required Azure DevOps environment. Furthermore, it will be described how source code/Power Apps can be versioned, quality assurance can be performed and subsequently artifacts delivered to the production environment.</p>
<p>The history of the article is longer. The first draft was already written by me in 2019. In the meantime I have worked on it again and again. What finally kept me from publishing it was, in my opinion, not yet &ldquo;<strong>finished</strong>&rdquo; tooling of the &ldquo;<a href="https://docs.microsoft.com/en-us/power-platform/alm/devops-build-tools" target="_blank" rel="noopener noreferrer">Microsoft Power Platform Build Tools for Azure DevOps - Power Platform | Microsoft Docs</a>&rdquo;. The originally available tooling (Azure DevOps Extension) is still available now but has been marked as &ldquo;DEPRECATED&rdquo; since the jump to version 0.3.7. Already since the jump from version 0.1.16 to version 0.3.6 the original tooling has been fundamentally revised/improved.</p><p>In version 0.1.16, the access credentials (user name/password) had to be stored in plain text to set up the connection. Since version 0.3.6 this authentication can finally be setup using <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals" target="_blank" rel="noopener noreferrer">Service Principals</a>.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href="/2020/08/12/1/devops-principal.png" data-title="Figure: Authentication methods" data-lightbox="/2020/08/12/1/devops-principal.png" style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src="/2020/08/12/1/devops-principal.png" class="lb lb-img" alt="Authentication methods"></a><figcaption><p style=background-color:#fff;border:none>Figure: Authentication methods</p></figcaption></figure></div><p>The old (<strong><ins>not recommended</ins></strong>) method (yellow) is still available. So the transition to the new option (green) is seamless, even for users who have already used previous versions of BuildTools or have not yet set up Service Principals. <strong>When changing to or starting with the current version of the Build Tools, you should always be using Service Principals</strong>.</p><p>Two versions are available in the Visual Studio Marketplace:</p><ol><li><strong><a href="https://marketplace.visualstudio.com/items?itemName=microsoft-IsvExpTools.PowerPlatform-BuildTools&targetId=e326b11d-3605-4a6e-903e-4bff6ccc155d&utm_source=vstsproduct&utm_medium=ExtHubManageList" target="_blank" rel="noopener noreferrer">Power Platform Build Tools - Visual Studio Marketplace</a></strong></li><li>(<strong>DEPRECATED</strong>) <a href="https://marketplace.visualstudio.com/items?itemName=microsoft-IsvExpTools.PowerApps-BuildTools&targetId=e326b11d-3605-4a6e-903e-4bff6ccc155d&utm_source=vstsproduct&utm_medium=ExtHubManageList" target="_blank" rel="noopener noreferrer">PowerApps BuildTools - Visual Studio Marketplace</a></li></ol><p>As described above, this extension [2] is now marked as &ldquo;<strong>DEPRECATED</strong>&rdquo;, so only [1] should be used.<br>The tools currently available for Azure DevOps are basically a wrapper around the SolutionPackager for D365 Customer Engagement (CRM).</p><p>The final architecture, for the integration of Azure DevOps and Power Platform, will look like the following on an abstract level.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href="/2020/08/12/1/architecture.png" data-title="Figure: Architecture overview" data-lightbox="/2020/08/12/1/architecture.png" style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src="/2020/08/12/1/architecture.png" class="lb lb-img" alt="Architecture overview"></a><figcaption><p style=background-color:#fff;border:none>Figure: Architecture overview</p></figcaption></figure></div><p>Microsoft itself suggests two different approaches for ALM in conjunction with the Power Platform. <sup id=fnref:1><a href=#fn:1 class=footnote-ref role=doc-noteref>1</a></sup> In this article the first variant is described, where only the source code is versioned, but not the packed solutions. In the context of classical software development this is also the <em>normal</em> way, because usually only source code and not compiled binaries are versioned.</p>

<!-- more -->

<h2 id=requirements>Requirements</h2>
<p>Basically, a few things are needed to be able to follow the steps. The following components are required.</p><ul><li>3 Power Apps Environments (e.g. <a href="https://docs.microsoft.com/en-us/office/developer-program/office-365-developer-program-get-started" target="_blank" rel="noopener noreferrer">Microsoft 365-Entwicklerabonnements</a> with three accounts inside the tenant each connected to <a href="https://powerapps.microsoft.com/en-us/communityplan/" target="_blank" rel="noopener noreferrer">Power Apps-Communityplan</a>)</li><li>1 Azure DevOps project<ul><li>installed <a href="https://docs.microsoft.com/en-us/power-platform/alm/devops-build-tools" target="_blank" rel="noopener noreferrer">Microsoft Power Platform Build Tools for Azure DevOps - Power Platform | Microsoft Docs</a></li><li>1 Git Repository</li></ul></li><li>1 Service Principal</li></ul><style>.alert{position:relative;padding:.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.5rem}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}</style><aside class="alert alert-warning"><div class=alert-warning-icon><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"><g stroke="#ffa300" stroke-width="2.23"><circle fill="#fff" cx="10" cy="10" r="8.5652"/><path d="M10 4.188V12.657M10 13.438v2.375"/></g></svg></div><div class=alert-warning-content>If a Microsoft 365 developer subscription is used, it must be clear that it expires after 90 days if no M365 development has been performed. For the extension it is sufficient that, for example, a <a href=https://docs.microsoft.com/en-us/sharepoint/dev/spfx/web-parts/get-started/build-a-hello-world-web-part>SharePoint Web Part</a> is created/developed.</div></aside><h2 id=getting-started>Getting started</h2><p>As mentioned above, three environments are required to follow this guide. For the following steps the following environments with the corresponding definitions are used.</p><table class=bordered-table><thead><tr><th>Name</th><th style=text-align:center>Function</th></tr></thead><tbody><tr><td>Andr√© Bering&rsquo;s Environment</td><td style=text-align:center>DEV</td></tr><tr><td>Johanna Lorenz&rsquo;s Environment</td><td style=text-align:center>BUILD/QA</td></tr><tr><td>Alex Wilber&rsquo;s Environment</td><td style=text-align:center>PROD</td></tr></tbody></table><p>As you can see, these three environments are visible in the <a href="http://aka.ms/ppac" target="_blank" rel="noopener noreferrer">Power Platform Admin Center</a>.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/environment-overview.png data-title="Figure: Environment overview" data-lightbox=/2020/08/12/1/environment-overview.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/environment-overview.png class="lb lb-img" alt="Environment overview" width=100%></a><figcaption><p style=background-color:#fff;border:none>Figure: Environment overview</p></figcaption></figure></div><p>Having a background as a developer, the first question that might arise is how to version control your work in the Power Platform. At the moment there is no easy way to do this. The only way is to manually download the solution, unzip it and then version the content.</p><p>This process can be mapped into Azure DevOps using ALM, even with a kind of CI/CD approach.<br>The article is mainly based on the Microsoft tutorial for the Power Apps Build Tools, which can be found <a href="https://github.com/microsoft/PowerApps-Samples/tree/master/build-tools" target="_blank" rel="noopener noreferrer">here</a>.</p><p>For the tutorial and the further steps the URL of the respective environment is required. The URL can be found in the <a href="https://aka.ms/ppac" target="_blank" rel="noopener noreferrer">Admin Center</a>.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/environment-url.png data-title="Figure: Admin Center - Environment URL" data-lightbox=/2020/08/12/1/environment-url.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/environment-url.png class="lb lb-img" alt="Admin Center - Environment URL" width=100%></a><figcaption><p style=background-color:#fff;border:none>Figure: Admin Center - Environment URL</p></figcaption></figure></div><p>If any form of ALM is to be used with Power Apps, it is first necessary to understand how solutions work in this context. To understand these basics you can read this Microsoft Docs article: <a href="https://docs.microsoft.com/en-us/powerapps/maker/common-data-service/solutions-overview" target="_blank" rel="noopener noreferrer">Solutions in Power Apps - Power Apps | Microsoft Docs</a></p><p>In this article there is another introduction linked, which should be read: <a href="https://docs.microsoft.com/en-us/powerapps/developer/common-data-service/introduction-solutions" target="_blank" rel="noopener noreferrer">Introduction to solutions - Power Apps | Microsoft Docs</a></p><h2 id=service-principal>Service connections / Service Principals</h2><p>To be able to set up the connection in Azure DevOps, the corresponding Service Principal must be set up or stored in Azure DevOps. The corresponding menu item is located below &ldquo;<em><strong>Project Settings - Pipelines - Service connection - New service connection</strong></em>&rdquo;.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/create-new-sc.png data-title="Figure: Azure DevOps Service - Create new service connection" data-lightbox=/2020/08/12/1/create-new-sc.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/create-new-sc.png class="lb lb-img" alt="Azure DevOps Service - Create new service connection"></a><figcaption><p style=background-color:#fff;border:none>Figure: Azure DevOps Service - Create new service connection</p></figcaption></figure></div><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/create-serviceconnection.png data-title="Figure: Azure DevOps Service connections" data-lightbox=/2020/08/12/1/create-serviceconnection.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/create-serviceconnection.png class="lb lb-img" alt="Azure DevOps Service connections"></a><figcaption><p style=background-color:#fff;border:none>Figure: Azure DevOps Service connections</p></figcaption></figure></div><p>In the dialogue, reference is made to two places which should help to create the corresponding access or to store it in the correct place. The first link refers to instructions in Microsoft Docs. There it is recommended to create the access using a linked PowerShell script. However, the script can only be executed under Windows because the PowerShell modules used require &ldquo;System.Forms&rdquo; and these are only available under Windows. Therefore I recommend that the Service Principal is created directly in the Azure Portal. The corresponding documentation is linked in the continuous text of the manual.</p><style>.alert{position:relative;padding:.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.5rem}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}</style><aside class="alert alert-warning"><div class=alert-warning-icon><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"><g stroke="#ffa300" stroke-width="2.23"><circle fill="#fff" cx="10" cy="10" r="8.5652"/><path d="M10 4.188V12.657M10 13.438v2.375"/></g></svg></div><div class=alert-warning-content>The Service Principal must be created in the Tenant in which the Power Apps environments are located.</div></aside><p><a href="https://docs.microsoft.com/en-us/powerapps/developer/common-data-service/use-single-tenant-server-server-authentication#azure-application-registration" target="_blank" rel="noopener noreferrer">Use Single-Tenant server-to-server authentication (Common Data Service) - Power Apps | Microsoft Docs</a></p><p>After the Service Principal(s) have been created in Azure in, the setup can be continued.</p><p>The crucial point is that there is <strong>not</strong> the item &ldquo;<strong>Settings</strong>&rdquo; as in the manual, but the item &ldquo;<strong>Advanced Settings</strong>&rdquo;. This item can be used to call up the corresponding interface.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/01-create-sp.png data-title="Figure: Settings - Advanced Settings" data-lightbox=/2020/08/12/1/01-create-sp.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/01-create-sp.png class="lb lb-img" alt="Settings - Advanced Settings"></a><figcaption><p style=background-color:#fff;border:none>Figure: Settings - Advanced Settings</p></figcaption></figure></div><p>At this point, you might be surprised when the Dynamics 365 interface appears. The two platforms are very closely intertwined, so that certain settings are currently only (still) found in the <em>old</em> interface. The changeover to an end-to-end management interface is an ongoing process. Therefore it can be assumed that in the future the points will also be integrated into the power platform interface or a uniform look and feel.</p><p>There is another stumbling block in the Microsoft documentation, namely the creation of the user. However, the behavior regarding this stumbling block was not consistent.<br>For this reason, the following are the individual dialogs that must be processed to make the Service Principal known within the power platform environment.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/02-create-sp.png data-title="Figure: D365 Settings" data-lightbox=/2020/08/12/1/02-create-sp.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/02-create-sp.png class="lb lb-img" alt="D365 Settings"></a><figcaption><p style=background-color:#fff;border:none>Figure: D365 Settings</p></figcaption></figure></div><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/03-create-sp.png data-title="Figure: D365 Security" data-lightbox=/2020/08/12/1/03-create-sp.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/03-create-sp.png class="lb lb-img" alt="D365 Security"></a><figcaption><p style=background-color:#fff;border:none>Figure: D365 Security</p></figcaption></figure></div><p>In the user list view, filter to &ldquo;Application Users&rdquo; and then click &ldquo;+ NEW&rdquo;.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/04-create-sp.png data-title="Figure: Filter user list" data-lightbox=/2020/08/12/1/04-create-sp.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/04-create-sp.png class="lb lb-img" alt="Filter user list"></a><figcaption><p style=background-color:#fff;border:none>Figure: Filter user list</p></figcaption></figure></div><p>Before entering the data, the dialog must be switched to the correct mode by selecting &ldquo;Application User&rdquo;.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/05-create-sp.png data-title="Figure: Select 'Application User'" data-lightbox=/2020/08/12/1/05-create-sp.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/05-create-sp.png class="lb lb-img" alt="Select &lsquo;Application User&rsquo;"></a><figcaption><p style=background-color:#fff;border:none>Figure: Select 'Application User'</p></figcaption></figure></div><p>When entering the data, the information that was previously defined when the Service Principal was created in the Azure Portal must be used. The user also needs (because it is a mandatory field of the form) an e-mail address, even if it is only a technical user account. Here, for example, addresses of so-called example domains (<a href="https://de.wikipedia.org/wiki/Beispieldomains" target="_blank" rel="noopener noreferrer">example domains - Wikipedia</a>) can be used, as can be seen in the following screenshot However, the address is not used for sending e-mails.<br>After creating the user by clicking the &ldquo;SAVE&rdquo; button, do not close the <strong>not</strong> dialog.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/06-create-sp.png data-title="Figure: Enter user information" data-lightbox=/2020/08/12/1/06-create-sp.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/06-create-sp.png class="lb lb-img" alt="Enter user information"></a><figcaption><p style=background-color:#fff;border:none>Figure: Enter user information</p></figcaption></figure></div><p>Using the button &ldquo;MANAGE ROLES&rdquo; the necessary role must be assigned to the user account.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/07-create-sp.png data-title="Figure: Open 'MANAGE ROLES'" data-lightbox=/2020/08/12/1/07-create-sp.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/07-create-sp.png class="lb lb-img" alt="Open &lsquo;MANAGE ROLES&rsquo;"></a><figcaption><p style=background-color:#fff;border:none>Figure: Open 'MANAGE ROLES'</p></figcaption></figure></div><p>To be able to perform all necessary actions with this user account, the role &ldquo;System Administrator&rdquo; must be assigned. Otherwise, errors will occur later in the context of using this accountby the Azure DevOps Pipelines.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/08-create-sp.png data-title="Figure: User role selection" data-lightbox=/2020/08/12/1/08-create-sp.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/08-create-sp.png class="lb lb-img" alt="User role selection"></a><figcaption><p style=background-color:#fff;border:none>Figure: User role selection</p></figcaption></figure></div><p>After this step the account is set up and can now be stored in Azure DevOps. For this purpose the dialog which is shown/described at the beginning of this section ("<a href=#service-principal>Service connections / Service Principals</a>") must be used.</p><p>An individual Service Connection must be created for each power platform environment. In total, the setup described above must be carried out three times, whereby the Service Principal does not have to be created three times. The Service Principal can be stored as a user account in each environment.<br>Alternatively, a separate Service Principal can be created for each environment.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/devops-service-connections-list.png data-title="Figure: Azure DevOps Service connections list" data-lightbox=/2020/08/12/1/devops-service-connections-list.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/devops-service-connections-list.png class="lb lb-img" alt="Azure DevOps Service connections list" width=100%></a><figcaption><p style=background-color:#fff;border:none>Figure: Azure DevOps Service connections list</p></figcaption></figure></div><p>Then create all required connections with the respective information/access data per environment.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/devops-service-connections-properties.png data-title="Figure: Azure DevOps Service connection properties" data-lightbox=/2020/08/12/1/devops-service-connections-properties.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/devops-service-connections-properties.png class="lb lb-img" alt="Azure DevOps Service connection properties" width=50%></a><figcaption><p style=background-color:#fff;border:none>Figure: Azure DevOps Service connection properties</p></figcaption></figure></div><p>As described in the section &ldquo;<a href=#getting-started>Getting Started</a>&rdquo;, the URL of the environment is required and this value is stored as &ldquo;<em><strong>Server URL</strong></em>&rdquo; in Service Connection properties.</p><h2 id=azure-devops-pipelines>Azure DevOps Pipelines</h2><h3 id=introduction-1>Introduction</h3><p>Once the Service Connections have been created, the pipelines and releases must now be set up. These are used to extract the source code from &ldquo;DEV&rdquo;, create a Managed Solution in &ldquo;QA/Build&rdquo; and then roll out this Solution in &ldquo;PROD&rdquo;.</p><p>One pipeline is required for each of the first two steps.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/pipelines-list.png data-title="Figure: Azure DevOps Pipelines list" data-lightbox=/2020/08/12/1/pipelines-list.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/pipelines-list.png class="lb lb-img" alt="Azure DevOps Pipelines list" width=100%></a><figcaption><p style=background-color:#fff;border:none>Figure: Azure DevOps Pipelines list</p></figcaption></figure></div><p>An Azure DevOps release is then used for the final deployment towards PROD.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/releases-list.png data-title="Figure: Azure DevOps Releases list" data-lightbox=/2020/08/12/1/releases-list.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/releases-list.png class="lb lb-img" alt="Azure DevOps Releases list" width=100%></a><figcaption><p style=background-color:#fff;border:none>Figure: Azure DevOps Releases list</p></figcaption></figure></div><h3 id=repository-permissions>Repository permissions</h3><p>Below &ldquo;<em><strong>Project Settings - Repos - Repositories User</strong></em>&rdquo; the account &ldquo;<em><strong>&lt;Azure DevOps Project Name> Build service (&lt;Organization name>)</strong></em>&rdquo; must be granted the &ldquo;<em><strong>Contribute</strong></em>&rdquo; permission. Otherwise, the build pipeline cannot push the source code into the repository.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/build-service-permission.png data-title="Figure: 'Build Service' permissions" data-lightbox=/2020/08/12/1/build-service-permission.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/build-service-permission.png class="lb lb-img" alt="&lsquo;Build Service&rsquo; permissions"></a><figcaption><p style=background-color:#fff;border:none>Figure: 'Build Service' permissions</p></figcaption></figure></div><h3 id=solution-export>Solution export</h3><p>There are four steps in the pipeline for exporting the solution and one more for adding the code to the repository.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/export-from-dev.png data-title="Figure: Azure DevOps pipeline tasks" data-lightbox=/2020/08/12/1/export-from-dev.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/export-from-dev.png class="lb lb-img" alt="Azure DevOps pipeline tasks"></a><figcaption><p style=background-color:#fff;border:none>Figure: Azure DevOps pipeline tasks</p></figcaption></figure></div><p>To add the source code to the repository, a few command-line commands are required to have Git run automatically in the context of the pipeline.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/task-add-source-code.png data-title="Figure: Azure DevOps pipeline command line task" data-lightbox=/2020/08/12/1/task-add-source-code.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/task-add-source-code.png class="lb lb-img" alt="Azure DevOps pipeline command line task"></a><figcaption><p style=background-color:#fff;border:none>Figure: Azure DevOps pipeline command line task</p></figcaption></figure></div><p>The variable should be emphasized here. This must / can be set when the queue is started. This means that the respective commit comment can always be set dynamically during the respective run. The code for this task can be found in the following section.</p><h4 id=source-code-in-repository>Source code in repository</h4><p>The commands are used in the final step &ldquo;Commit solution to repo&rdquo; to add the code to the repository.</p><pre><code>echo commit all changes
git config user.email &quot;&lt;E-Mail address of commit user&quot;&quot;
git config user.name &quot;Automatic Build&quot;
git checkout master
git add --all
git commit -m &quot;$(CommitMessage)&quot;
echo push code to new repo
git -c http.extraheader=&quot;AUTHORIZATION: bearer $(System.AccessToken)&quot; push origin master
</code></pre><h3 id=create-managed-solution>Create managed solution</h3><p>After the solution has been extracted from the DEV environment, it must be transferred to the BULD/QA environment where the managed solution is created.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/export-from-build.png data-title="Figure: Azure DevOps pipeline tasks" data-lightbox=/2020/08/12/1/export-from-build.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/export-from-build.png class="lb lb-img" alt="Azure DevOps pipeline tasks"></a><figcaption><p style=background-color:#fff;border:none>Figure: Azure DevOps pipeline tasks</p></figcaption></figure></div><p>For this purpose, the two tasks &ldquo;Power Platform Import Solution&rdquo; and &ldquo;Power Platform Export Solution&rdquo; are used in the context of the pipeline. For the latter task it is important that the option &ldquo;Export as Managed Solution&rdquo; is activated.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/export-from-build-managed.png data-title="Figure: Option ¬ªExport as Managed Solution¬´" data-lightbox=/2020/08/12/1/export-from-build-managed.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/export-from-build-managed.png class="lb lb-img" alt="Option ¬ªExport as Managed Solution¬´"></a><figcaption><p style=background-color:#fff;border:none>Figure: Option ¬ªExport as Managed Solution¬´</p></figcaption></figure></div><p>In the last step of the pipeline, the exported solution is published as pipeline artifact. This step is important so that the solution created in the context of the release can then be rolled out in the production environment.</p><h3 id=deployment-to-prod>Deployment to PROD</h3><p>With a release, the solution is rolled out into the &ldquo;PROD&rdquo; environment. In this case, the artifact previously created must first be linked to the Release in the &ldquo;Artifacts&rdquo;.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/deploy-to-prod.png data-title="Figure: Release pipeline - artifact properties" data-lightbox=/2020/08/12/1/deploy-to-prod.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/deploy-to-prod.png class="lb lb-img" alt="Release pipeline - artifact properties"></a><figcaption><p style=background-color:#fff;border:none>Figure: Release pipeline - artifact properties</p></figcaption></figure></div><p>This way the artifact can be used in the tasks of the release. It is important that the &ldquo;alias&rdquo; of the artifact is part of the path specification in the task for the actual deployment. There is no variable within Azure DevOps for this variable part. The reason for this is that more than one artifact can be used in a release and therefore a unique relationship between variable and artifact would not be possible.</p><div class=img><figure class="lb lb-cust-margin"><a class=lb href=/2020/08/12/1/deploy-to-prod-alias.png data-title="Figure: Release Pipeline - artifact alias¬´" data-lightbox=/2020/08/12/1/deploy-to-prod-alias.png style=display:flex;justify-content:center;align-items:center;background-color:#f9f9f982;border-radius:3%><img src=/2020/08/12/1/deploy-to-prod-alias.png class="lb lb-img" alt="Release Pipeline - artifact alias¬´"></a><figcaption><p style=background-color:#fff;border:none>Figure: Release Pipeline - artifact alias¬´</p></figcaption></figure></div><h2 id=tools>Tools</h2><p>As mentioned in the beginning, the Power Platform Build Tools are basically just a wrapper around the tooling for customer engagement. They can be installed and used as in the following instructions.</p><p><a href="https://docs.microsoft.com/en-us/dynamics365/customerengagement/on-premises/developer/compress-extract-solution-file-solutionpackager" target="_blank" rel="noopener noreferrer">Use the SolutionPackager tool to compress and extract a solution file</a></p><p>Afterwards, all tools are installed in order to be able to perform the previously described steps manually locally. At this point, however, it is recommended to choose the ALM path using Azure DevOps for the sake of cooperation.</p><h2 id=conclusion>Conclusion</h2><p>A developer may be used to a different approach when it comes to versioning source code. However, development on the Power Platform brings with it special peculiarities, which include a different approach to this process.</p><h2 id=sources>Sources</h2><ol><li><a href="https://docs.microsoft.com/en-us/power-platform/alm/" target="_blank" rel="noopener noreferrer">Application lifecycle management (ALM) with Microsoft Power Platform - Power Platform | Microsoft Docs</a></li><li><a href="https://docs.microsoft.com/en-us/power-platform/alm/basics-alm" target="_blank" rel="noopener noreferrer">Application lifecycle management (ALM) basics with Microsoft Power Platform - Power Platform | Microsoft Docs</a></li><li><a href="https://docs.microsoft.com/en-us/power-platform/alm/devops-build-tools#configure-service-connections-using-a-service-principal" target="_blank" rel="noopener noreferrer">Configure service connections using a service principal - Power Platform | Microsoft Docs</a></li><li><a href="https://docs.microsoft.com/en-us/power-platform/admin/database-security" target="_blank" rel="noopener noreferrer">Configure user security in an environment - Power Platform | Microsoft Docs</a></li><li><a href="https://docs.microsoft.com/en-us/powerapps/developer/common-data-service/use-single-tenant-server-server-authentication#azure-application-registration" target="_blank" rel="noopener noreferrer">Use Single-Tenant server-to-server authentication (Common Data Service) - Power Apps | Microsoft Docs</a></li></ol><section class=footnotes role=doc-endnotes><hr><ol><li id=fn:1 role=doc-endnote><p>&ldquo;There are two main paths you can use when working with solutions in a source control system:&mldr;&rdquo; - <a href="https://docs.microsoft.com/en-us/power-platform/alm/alm-for-developers" target="_blank" rel="noopener noreferrer">ALM for developers - Power Platform | Microsoft Docs</a>, Retrieval: 24.06.2020 <a href=#fnref:1 class=footnote-backref role=doc-backlink>&#8617;&#xfe0e;</a></p></li></ol></section>
